package Form;

import Blockchain.BlockchainManager;
import Blockchain.Transaction;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;

public class Index {
    public JPanel main;
    private JTextField addProductIdInput;
    private JTextField traceProductIdInput;
    private JLabel addProductIdLabel;
    private JLabel fromLabel;
    private JTextField fromInput;
    private JLabel toLabel;
    private JTextField toInput;
    private JButton addButton;
    private JButton traceButton;
    private JLabel traceProduceIdLabel;
    private JPanel splitPanel;
    private JScrollPane traceResultPane;
    private JList<String> traceResultList;

    private BlockchainManager manager;
//    public static void main(String[] args) {
//        JFrame frame = new JFrame("Index");
//        frame.setContentPane(new Index().main);
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        frame.pack();
//        frame.setVisible(true);
//    }

    public Index() throws IOException, ClassNotFoundException {
        manager = BlockchainManager.getInstance();
        // 添加交易记录
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Add product id: " + addProductIdInput.getText());
                try {
                    addTransacton();
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                } catch (ClassNotFoundException ex) {
                    throw new RuntimeException(ex);
                }
            }
        });

        // 溯源
        traceButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("正在溯源: " + traceProductIdInput.getText());
                trace();
                System.out.println("溯源结束");
            }
        });
    }

    private void addTransacton() throws IOException, ClassNotFoundException {
        String productId = addProductIdInput.getText();
        String from = fromInput.getText();
        String to = toInput.getText();

        if (productId.isEmpty() || from.isEmpty() || to.isEmpty()) {
            JOptionPane.showMessageDialog(null, "请输入完整信息");
        }
        if (!manager.addTransaction(new Transaction(productId, from, to))) {
            JOptionPane.showMessageDialog(null, "非法交易");
            // 非法交易则不清空输入，方便修改
            return;
        }
        JOptionPane.showMessageDialog(null, "添加成功");
        // 清空输入
        addProductIdInput.setText("");
        fromInput.setText("");
        toInput.setText("");
    }

    private void trace() {
        String productId = traceProductIdInput.getText();
        ArrayList<Transaction> resultArray = manager.trace(productId);
        traceResultPane.setViewportView(null);
        if (resultArray.size() == 0) {
            traceResultPane.setViewportView(new JLabel("无该货品信息"));
        } else {
            // JList采用DefaultListModel作为数据模型
            DefaultListModel<String> resultString = new DefaultListModel<>();
            for (Transaction transaction : resultArray) {
                resultString.addElement(transaction.getFromAndTo());
            }
            System.out.println(resultString);
            // 赋值JList
            traceResultList.setModel(resultString);
            traceResultPane.setViewportView(traceResultList);
        }

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        main = new JPanel();
        main.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(9, 5, new Insets(0, 0, 0, 0), -1, -1));
        main.setBorder(BorderFactory.createTitledBorder(null, "茅台溯源", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        addProductIdInput = new JTextField();
        main.add(addProductIdInput, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        addProductIdLabel = new JLabel();
        addProductIdLabel.setText("产品编号");
        main.add(addProductIdLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fromLabel = new JLabel();
        fromLabel.setText("From");
        main.add(fromLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fromInput = new JTextField();
        main.add(fromInput, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        toLabel = new JLabel();
        toLabel.setText("To");
        main.add(toLabel, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        toInput = new JTextField();
        toInput.setText("");
        main.add(toInput, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        addButton = new JButton();
        addButton.setText("添加交易");
        main.add(addButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 4, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        traceButton = new JButton();
        traceButton.setText("溯源");
        main.add(traceButton, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 4, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        traceProductIdInput = new JTextField();
        main.add(traceProductIdInput, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 4, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        traceProduceIdLabel = new JLabel();
        traceProduceIdLabel.setText("产品编号");
        main.add(traceProduceIdLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 4, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        splitPanel = new JPanel();
        splitPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPanel.setBackground(new Color(-16777216));
        splitPanel.setForeground(new Color(-1713914));
        main.add(splitPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 8, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(3, -1), null, null, 0, false));
        splitPanel.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        traceResultPane = new JScrollPane();
        main.add(traceResultPane, new com.intellij.uiDesigner.core.GridConstraints(8, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        traceResultList = new JList();
        traceResultPane.setViewportView(traceResultList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }

}
